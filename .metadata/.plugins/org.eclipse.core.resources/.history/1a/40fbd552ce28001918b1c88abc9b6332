import java.util.List;
import java.util.Set;

import org.eclipse.jdt.core.dom.PrimitiveType.Code;

import spoon.Launcher;
import spoon.reflect.code.BinaryOperatorKind;
import spoon.reflect.code.CtExpression;
import spoon.reflect.code.CtStatement;
import spoon.reflect.declaration.CtClass;
import spoon.reflect.declaration.CtElement;
import spoon.reflect.declaration.CtMethod;
import spoon.reflect.declaration.CtType;
import spoon.reflect.declaration.CtTypeMember;
import spoon.support.reflect.code.CtBinaryOperatorImpl;
import spoon.support.reflect.code.CtIfImpl;

public class Start {

	public static void main(String[] args) {
		CtClass<?> l = Launcher.parseClass("class A { void m() { if(\"a\" == \"a\") {System.out.println(\"yeah\");}} }");
		//System.out.println(l);
		Set<CtMethod<?>> setMethods = l.getAllMethods();
		for(CtMethod<?> method: setMethods) {
			List<CtStatement> statements = method.getBody().getStatements();
			if(statements.size() > 0) {
				for(CtStatement statement: statements) {
					if(statement.getClass().getTypeName() == CtIfImpl.class.getTypeName()) {
						CtIfImpl ifImpl = (CtIfImpl) statement;
						CtBinaryOperatorImpl<?> binaryOperatorImpl =  (CtBinaryOperatorImpl<?>)ifImpl.getCondition();
						BinaryOperatorKind kind =  binaryOperatorImpl.getKind();
						System.out.println(kind);
					}
					
				}
			}
		}	
	}
}
